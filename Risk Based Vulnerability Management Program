# Risk-Based Vulnerability Management Program

## Project Title
**Designing a Risk-Based Vulnerability Management Program Using CVSS, EPSS, and Business Impact Scoring**

---

## 1. Introduction

Modern IT environments are continuously exposed to exploitable vulnerabilities. Addressing every vulnerability equally is unsustainable due to operational constraints. This project introduces a risk-based approach to vulnerability management that integrates:

- CVSS (Common Vulnerability Scoring System)
- EPSS (Exploit Prediction Scoring System)
- Business impact scoring

This triad helps prioritize remediation based on real-world threat likelihood and business risk.

---

## 2. Objectives and Scope

**Objectives:**
- Integrate CVSS, EPSS, and business impact scores into one risk model
- Prioritize vulnerabilities based on risk rather than severity alone
- Enhance SLA compliance and reduce backlog
- Provide transparent risk metrics to leadership

**Scope:**
- Internal infrastructure
- External-facing applications
- Cloud-hosted workloads
- Third-party integrations

---

## 3. Assurance Opinion

**Rating: Adequate**

While foundational tools and SLAs are in place, current prioritization depends solely on CVSS, ignoring real exploitability and asset criticality. This results in:
- Missed SLA deadlines for high-risk vulnerabilities
- Misallocation of patching resources
- Poor stakeholder coordination

A unified risk model integrating EPSS and impact scoring is recommended.

---

## 4. Findings

| Finding | Description |
|---------|-------------|
| **Integration Gaps** | No EPSS or business impact data integrated with vulnerability platform |
| **Prioritization Gaps** | Asset inventory lacks business-criticality tagging |
| **SLA Violations** | CVSS 9+ vulnerabilities with high EPSS remained unpatched over 14 days |
| **Governance** | Lack of cross-functional vulnerability triage board |

---

## 5. Areas for Development

| Priority | Issue |
|---------|-------|
| High | Introduce EPSS and business impact scoring |
| High | Automate SLA violation alerts and risk routing |
| Medium | Improve third-party patch timelines |
| Medium | Establish a monthly triage board |
| Low | Improve exception documentation |

---

## 6. Action Plan

**Risk Score Formula:**  
`Risk Score = CVSS × EPSS × Business Impact`  

| Risk Score | Action |
|------------|--------|
| ≥ 40 | Patch within 7 days |
| 20–39 | Patch within 30 days |
| < 20 | Monitor only |

**Steps:**
- Pull CVSS from Nessus
- Pull EPSS from [FIRST.org API](https://www.first.org/epss/)
- Map Business Impact from CMDB
- Update policies and dashboards

---

## 7. Tools & Platforms Used

| Tool | Purpose |
|------|---------|
| Nessus | Vulnerability Scanning |
| EPSS API | Exploit Prediction Scores |
| ServiceNow CMDB | Business Impact Mapping |
| Power BI | Dashboards & Reporting |
| Jira | Remediation Task Tracking |

---

## 8. Key Takeaways

- CVSS-only strategies are insufficient for risk-based remediation
- EPSS adds real-world exploitability context
- Business impact aligns patching with enterprise risk appetite
- Automated scoring and SLA tracking improve compliance and response time

---

## 9. References (APA 7th Edition)

- FIRST. (2024). *Exploit Prediction Scoring System (EPSS)*. https://www.first.org/epss  
- National Institute of Standards and Technology. (2020). *Security and Privacy Controls for Information Systems and Organizations (SP 800-53 Rev. 5)*. https://doi.org/10.6028/NIST.SP.800-53r5  
- Tenable. (2023). *Nessus Vulnerability Scanner Overview*. https://www.tenable.com/products/nessus  
- CVSS v3.1 Specification Document. (2019). *Forum of Incident Response and Security Teams (FIRST)*. https://www.first.org/cvss/specification-document

---

> Prepared by: **Rewaju** – GRC Analyst | Cybersecurity Researcher
